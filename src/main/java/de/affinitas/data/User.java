package de.affinitas.data;

import java.util.Date;

import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.annotation.Version;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBMapperFieldModel.DynamoDBAttributeType;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTyped;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBVersionAttribute;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

import de.affinitas.Application;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@NoArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonInclude(JsonInclude.Include.NON_EMPTY)
@DynamoDBTable(tableName = User.TABLE_NAME)
public class User {

    public static final String TABLE_NAME = "user";

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    private String id;

    @DynamoDBAttribute
    private String lastName;

    public User(String lastName) {
        this.lastName = lastName;
    }

    @CreatedDate
    @DynamoDBTyped(DynamoDBAttributeType.S)
    @DynamoDBAttribute
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = Application.TIMESTAMP_FORMAT, timezone = "UTC")
    @JsonProperty(access = JsonProperty.Access.READ_ONLY)
    private Date createdAt;

    @DynamoDBTyped(DynamoDBAttributeType.S)
    @LastModifiedDate //TODO: not working, SpringData thinks it's an existing entity since the @Id is not null (we assign it).
    @JsonFormat(shape = JsonFormat.Shape.STRING, pattern = Application.TIMESTAMP_FORMAT, timezone = "UTC")
    @JsonProperty(access = JsonProperty.Access.READ_ONLY)
    private Date updatedAt;

    //http://docs.spring.io/spring-data/rest/docs/current/reference/html/#conditional
    @DynamoDBVersionAttribute
    @Version
    private Integer version;
}
